#pragma once
#include "pch.h"

class PaintMgr {
  private:
    struct PaintData {
        struct MatInfo {
            bool m_bRecolor = false;
            RwRGBA m_nColor = {0, 0, 0, 0};
            RwRGBA m_nOriginalColor = {0, 0, 0, 0};
            RpGeometry* m_pGeometry = nullptr;
            RwInt32 m_nOriginalGeometryFlags = 0;
        };
        std::unordered_map<RpMaterial*, MatInfo> m_nMapInfoList;

        PaintData(CVehicle* pVeh) {
        }

        // Sets the material color to provided value
        void SetMatColor(RpMaterial* pMat, RpGeometry* pGeo, RwRGBA color);

    };
    VehicleExtendedData<PaintData> m_VehPaint;

    PaintMgr();
    PaintMgr(PaintMgr&);

  public:

    // Returns internal data structure
    PaintData &GetData(CVehicle* pVeh);

    // Applies color to vehicle
    void SetColor(CVehicle* pVeh, CRGBA color);
};

extern PaintMgr& Paint;